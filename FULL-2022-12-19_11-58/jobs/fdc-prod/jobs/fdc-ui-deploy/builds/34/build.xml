<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.42">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>releaseVersion</name>
          <description>Eg: 2021.xx.xx</description>
          <value>2022.12.05.0</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>fdcenv</name>
          <description>Choose the environment you want to deploy.</description>
          <value>stage</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>Git_Branch</name>
          <description>Please mention required git branch and it should be release branch
Eg: release/xxxx.xx.xx</description>
          <value>release/2022.12.05</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>releaseVersion</string>
        <string>fdcenv</string>
        <string>Git_Branch</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>vkumar</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@548.v9085a486966a">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.9.3">
      <stagesUUID>77984b52-362f-4d00-bc62-7c33cbf1a832</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@1.9.3">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Git checkout</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>git</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>branch</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">${Git_Branch}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>credentialsId</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">vinay-github</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>url</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">https://github.com/The-Frontdoor-Collective/fdc-ui.git/</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Updating Parameter File</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">
                      ImageTag=$(grep -A1 &quot;ImageTag&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json | tail -1 | cut -d &quot;:&quot; -f2 | cut -d &quot;\&quot;&quot; -f2)
                      if [ $releaseVersion = &quot;latest&quot; ]
                      then
                       sed -i &quot;s/$ImageTag/${dockerTag}/&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json
                      else
                       sed -i &quot;s/$ImageTag/${releaseVersion}/&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json
                      fi
                      </value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Deploying stack in ${fdcenv} environment</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if (fdcenv == &apos;stage&apos;) {
                               withAWS(roleAccount:&apos;579576404934&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-ui-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-ui-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-ui.yml --parameters file://${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-ui-${fdcenv} --region us-west-2&apos;
                               }
                    } else if (fdcenv == &apos;prod&apos;) {
                               withAWS(roleAccount:&apos;923567406269&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-ui-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-ui-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-ui.yml --parameters file://${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-ui-${fdcenv} --region us-west-2&apos;
                               }
                    } else {
                                       sh &apos;echo &quot;Please run this build only for STAGE or PROD envs&quot;&apos;
                                       sh &apos;exit 1&apos;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>77984b52-362f-4d00-bc62-7c33cbf1a832</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>imagename</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">fdc-ui</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>ecrurl</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">https://837587249384.dkr.ecr.us-west-2.amazonaws.com</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>ecrcredentials</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">ecr:us-west-2:aws-credentials</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>dockerTag</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                  <value class="string">&quot;latest-${BUILD_NUMBER}-${BUILD_TIMESTAMP}&quot;</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2633.v6baeedc13805">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>607890</queueId>
  <timestamp>1670917773008</timestamp>
  <startTime>1670917773036</startTime>
  <result>FAILURE</result>
  <duration>5858</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    environment {
        imagename = &quot;fdc-ui&quot;
        ecrurl = &quot;https://837587249384.dkr.ecr.us-west-2.amazonaws.com&quot;
        ecrcredentials = &quot;ecr:us-west-2:aws-credentials&quot;
        dockerTag = &quot;latest-${BUILD_NUMBER}-${BUILD_TIMESTAMP}&quot;
    } 
    agent any
    stages {
        stage(&apos;Git checkout&apos;) {
            steps {
                git branch: &apos;${Git_Branch}&apos;, credentialsId: &apos;vinay-github&apos;, url: &apos;https://github.com/The-Frontdoor-Collective/fdc-ui.git/&apos;
            }
        }
        stage (&apos;Updating Parameter File&apos;) {
            steps {
                sh &apos;&apos;&apos;
                      ImageTag=$(grep -A1 &quot;ImageTag&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json | tail -1 | cut -d &quot;:&quot; -f2 | cut -d &quot;\\&quot;&quot; -f2)
                      if [ $releaseVersion = &quot;latest&quot; ]
                      then
                       sed -i &quot;s/$ImageTag/${dockerTag}/&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json
                      else
                       sed -i &quot;s/$ImageTag/${releaseVersion}/&quot; ${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json
                      fi
                      &apos;&apos;&apos;
            }
        } 
          stage(&apos;Deploying stack in ${fdcenv} environment&apos;) {
            steps {
                script {
                    if (fdcenv == &apos;stage&apos;) {
                               withAWS(roleAccount:&apos;579576404934&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-ui-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-ui-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-ui.yml --parameters file://${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-ui-${fdcenv} --region us-west-2&apos;
                               }
                    } else if (fdcenv == &apos;prod&apos;) {
                               withAWS(roleAccount:&apos;923567406269&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-ui-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-ui-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-ui.yml --parameters file://${WORKSPACE}/fdc-svc-ui-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-ui-${fdcenv} --region us-west-2&apos;
                               }
                    } else {
                                       sh &apos;echo &quot;Please run this build only for STAGE or PROD envs&quot;&apos;
                                       sh &apos;exit 1&apos;
                    }
                }
            }
    
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1082298823</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>135596875</long>
      </entry>
      <entry>
        <string>run</string>
        <long>3021798006</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>26012974</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>313382694</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>24</iota>
    <head>1:24</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>
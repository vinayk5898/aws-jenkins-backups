<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.42">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>TZ=America/Phoenix
45 3 * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2633.v6baeedc13805">
    <script>pipeline {
    environment {
        FDC_URL = &apos;https://api.frontdoorcorp.com/fdc/route/optimise/final&apos;
    }

    agent any

    stages {
        stage(&quot;first&quot;) {
            steps {
                script {
                    tz = TimeZone.getTimeZone(&quot;America/Phoenix&quot;)
                    def outputDateFormat = &quot;yyyy-MM-dd&quot;
                    def now = new Date()
                    def convertedDate = now.format(outputDateFormat, tz)
                    
                    def curlScript = &quot;curl -s -w &apos;####%{response_code}&apos; --location --request POST ${FDC_URL}&quot;
                    def finalScript = &quot;${curlScript}&quot; + 
                    &quot; --header &apos;Authorization: Client 120&apos; --header &apos;Content-Type: application/json&apos;&quot; + 
                    &quot; --data-raw &apos;{ \&quot;parcelCenterIds\&quot;: [6], \&quot;deliveryDate\&quot;: \&quot;${convertedDate}\&quot;}&apos;&quot;
                    echo finalScript
                    echo convertedDate

                    def (String responseBody, int responseStatusCode) = sh(
                        script: &quot;${finalScript}&quot;,
                        returnStdout: true
                    ).trim()
                    .tokenize(&quot;####&quot;)
                    
                    if (responseStatusCode != 200 &amp;&amp; responseStatusCode != 202 ) {
                        error(&quot;Returned status code = ${responseStatusCode} when calling ${FDC_URL}. Response body: ${responseBody}&quot;)
                    } else {
                        echo &apos;HTTP Response body: &apos; + responseBody
                    }
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>true</disabled>
</flow-definition>
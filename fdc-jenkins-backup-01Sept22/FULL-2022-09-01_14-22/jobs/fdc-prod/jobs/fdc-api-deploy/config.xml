<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.42">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritParentStrategy"/>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:fdc-jenkins-admin</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:fdc-jenkins-admin</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:fdc-jenkins-admin</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:fdc-jenkins-admin</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Build:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Cancel:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Configure:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Delete:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Discover:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Move:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Read:authenticated</permission>
      <permission>hudson.model.Item.Read:fdc-jenkins-admin</permission>
      <permission>hudson.model.Item.Workspace:fdc-jenkins-admin</permission>
      <permission>hudson.model.Run.Delete:fdc-jenkins-admin</permission>
      <permission>hudson.model.Run.Replay:fdc-jenkins-admin</permission>
      <permission>hudson.model.Run.Update:fdc-jenkins-admin</permission>
      <permission>hudson.scm.SCM.Tag:fdc-jenkins-admin</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.34.1">
      <projectUrl>https://github.com/The-Frontdoor-Collective/fdc-shortcut.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>releaseVersion</name>
          <description>Eg: 2021.xx.xx</description>
          <defaultValue>latest</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>fdcenv</name>
          <description>Choose the environment you want to deploy.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>stage</string>
              <string>prod</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Git_Branch</name>
          <description>Please mention required git branch and it should be release branch
Eg: release/xxxx.xx.xx</description>
          <defaultValue>develop</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2633.v6baeedc13805">
    <script>pipeline {
    environment {
        imagename = &quot;fdc-api&quot;
        ecrurl = &quot;https://837587249384.dkr.ecr.us-west-2.amazonaws.com&quot;
        ecrcredentials = &quot;ecr:us-west-2:aws-credentials&quot;
        dockerTag = &quot;latest-${BUILD_NUMBER}-${BUILD_TIMESTAMP}&quot;
    } 
    agent any
    stages {
        stage(&apos;Git checkout&apos;) {
            steps {
                git branch: &apos;${Git_Branch}&apos;, credentialsId: &apos;vinay-github&apos;, url: &apos;https://github.com/The-Frontdoor-Collective/fdc-shortcut.git/&apos;
            }
        }
        stage (&apos;Updating Parameter File&apos;) {
            steps {
                sh &apos;&apos;&apos;
                      ImageTag=$(grep -A1 &quot;ImageTag&quot; ${WORKSPACE}/fdc-svc-api-${fdcenv}-parameter.json | tail -1 | cut -d &quot;:&quot; -f2 | cut -d &quot;\\&quot;&quot; -f2)
                      if [ $releaseVersion = &quot;latest&quot; ]
                      then
                       sed -i &quot;s/$ImageTag/${dockerTag}/&quot; ${WORKSPACE}/fdc-svc-api-${fdcenv}-parameter.json
                      else
                       sed -i &quot;s/$ImageTag/${releaseVersion}/&quot; ${WORKSPACE}/fdc-svc-api-${fdcenv}-parameter.json
                      fi
                      &apos;&apos;&apos;
            }
        } 
          stage(&apos;Deploying stack in ${fdcenv} environment&apos;) {
            steps {
                script {
                    if (fdcenv == &apos;stage&apos;) {
                               withAWS(roleAccount:&apos;579576404934&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-api-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-api-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-api.yml --parameters file://${WORKSPACE}/fdc-svc-api-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-api-${fdcenv} --region us-west-2&apos;
                               }
                    } else if (fdcenv == &apos;prod&apos;) {
                               withAWS(roleAccount:&apos;923567406269&apos;, role:&apos;AllowAltirJenkins&apos;) {
                                    sh &apos;cat fdc-svc-api-${fdcenv}-parameter.json&apos;
                                    sh &apos;aws cloudformation update-stack --stack-name fdc-svc-api-${fdcenv} --region us-west-2 --template-body file://${WORKSPACE}/fdc-svc-api.yml --parameters file://${WORKSPACE}/fdc-svc-api-${fdcenv}-parameter.json --capabilities &quot;CAPABILITY_IAM&quot; &quot;CAPABILITY_NAMED_IAM&quot;&apos;
                                    sh &apos;aws cloudformation wait stack-update-complete --stack-name fdc-svc-api-${fdcenv} --region us-west-2&apos;
                               }
                    } else {
                                    sh &apos;echo &quot;Please run this build only for STAGE or PROD envs&quot;&apos;
                                    sh &apos;exit 1&apos;
                    }
                }
            }
    
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>